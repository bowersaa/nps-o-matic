- count = Rating.count
- promoters_percentage = Rating.promoters_percentage
- detractors_percentage = Rating.detractors_percentage
- nps = Rating.nps

%p.card-title= t('.appreciate')

.card
  .row.with-padding
    .column
      .number
        = count
      .word
        = t('.rating').pluralize count

      %hr
      .row.rating-row
        .column#promoters{ class: "score-#{ find_nearest(promoters_percentage) }"}
          .number
            = number_to_percentage(promoters_percentage, precision: 0)
          .word
            = t('.promoters')
        .column.with-padding.center.symbol -
        .column#detractors{ class: "score-#{ find_nearest(detractors_percentage * -1) }"}
          .number
            = number_to_percentage(detractors_percentage, precision: 0)
          .word
            = t('.detractors')
        .column.with-padding.center.symbol =
    
    .column
      .row.dial-group
        .dial
          = inline_svg('dial.svg', { class: "total-score-#{ find_nearest(nps) } rotation-#{ nps }"})
        .total-rating
          = nps
      .row.center
        .word
          = t('.nps')
